name: Create docker images

on:
  push:
    branches: ["master", "develop"]

permissions:
  contents: write
  packages: write

jobs:
  getversion:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.read_toml.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - name: Read version from project
        users: SebRollen/toml-actions@1.0.2
        id: read_version
        with:
          file: 'gnrpy/pyproject.toml'
          field: 'project.version'
      - name: Publish version
        uses: richardsimko/update-tag@v1
        with:
          version_name: "${{steps.read_toml.outputs.value}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          id: publish_version
          run: echo "::set-output name=version::${{ steps.read_version.outputs.value }}"
      
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: getversion
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          
      - name: Build and push main Docker image
        uses: docker/build-push-action@v5
        with:
          file: ./dockerfiles/genropy/Dockerfile
          context: ./
          push: true
          tags: ghcr.io/${{ github.repository }}-${GITHUB_REF##*/}:latest, ghcr.io/${{ github.repository }}-${GITHUB_REF##*/}:${{ needs.getversion.outputs.version }}
          platforms: linux/amd64,linux/arm64
          provenance: false

