#!/usr/bin/env python2.7
# encoding: utf-8
# 
from gnr.web.gnrwsgisite_proxy.gnrsiteregister import GnrSiteRegisterServer
from gnr.core.gnrbag import Bag
from gnr.core.gnrsys import expandpath
import argparse

def getOptions():
    usage = "\ngnrremotebagserve"
    parser = argparse.ArgumentParser(usage)
    
    parser.add_argument('-s', '--sitename',
                      help="The name of the site")

    parser.add_argument('-u', '--daemon_uri',
                      help="The uri of daemon")
                                            
    parser.add_argument('-H', '--host',
                      help="The binded host")
                      
    parser.add_argument('-P', '--port',
                      help="The binded port" ,type=int)
                      
    parser.add_argument('-K', '--hmac_key',
                      help="The secret key")
                      
    parser.add_argument('-t', '--timeout',type=float,
                      help="Timeout")

    parser.add_argument('-m', '--multiplex',action='store_false',
                      help="Use multiplexed server")
                      
    parser.add_argument('--polltimeout',type=float,
                      help="Use multiplexed server poll timeout")

    parser.add_argument('-d', '--debug',
                      action='store_false',
                      help="Debug mode")
                      
    parser.add_argument('-c', '--compression',
                      action='store_false',
                      help="Enable compression")

    arguments= parser.parse_args()
    return arguments.__dict__
    
    

if __name__=="__main__":
    options = getOptions()
    sitename = options.pop('sitename',None)
    daemon_uri = options.pop('daemon_uri',None)
    debug = options.pop('debug',False)
    port = options['port'] 
    if port and port !='*':
        port = int(port)
    options['port'] = port or '*'
        
    print '******************** ',options,'********************'
    server = GnrSiteRegisterServer(sitename=sitename,daemon_uri=daemon_uri,debug=debug)
    print '*****created***'
    server.start(**options)