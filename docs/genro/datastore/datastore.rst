	.. _genro-datastore:

===========
 datastore
===========

	- :ref:`datastore-description`

	- :ref:`datastore-syntax`

	- :ref:`datastore-access`

	- :ref:`datastore-debugger`

	.. _datastore-description:

Description
===========

	The datastore is a Genro :ref:`genro-bag-intro` used to keep track of data.

	You can access to it from any Genro webpage by clicking ``ctrl+shift+D`` [#]_.

	Through various python commands, you can attach the javascript code to the events of the components interface or events generated by the datastore.

	.. _datastore-syntax:

Datastore syntax
================

	The path followed by the syntax in the datastore:

	* ``path.absolute.in.datastore``
	* ``.path.relative.in.datastore``
	* ``#ID.path.relative.to.the.ID``

	The path indicates the access path to data to every element of the datastore (it is implemented by reading the Bag interface, and thus includes many things: for example, you can also specify the CSS classes of an HTML element linking them to an element of the datastore), using the prefixes:

	* "^" (circumflex accent): ``^access.to.resolver``, setting an observer at this node. The component will be informed of changes to the datastore
	* equal: ``=accessed.from.resolver``, reads the contents of the datastore.

	.. _datastore-access:

Access to the datastore from javascript
=======================================

	The possible operations on the datastore include some macros, that are:
	
	* :ref:`genro_set`
	* :ref:`genro_put`
	* :ref:`genro_get`
	* :ref:`genro_fire`
	
	They can be specified in the javascript events associated with an interface, and the framework deals gnrjs to the expansion of these macros. Check the :ref:`genro_macro` page for further details.

	.. _datastore-debugger:

Datastore folders
=================

	??? Explain ALL the folders contained in the debugger (ctrl+shift+D).

**Footnotes**

.. [#] For Mac and Windows users. For Linux users, you have to push ... ???
