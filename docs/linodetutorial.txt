Enable  /etc/apt/sources.list  repositories universe removing #


reference: http://wiki.ubuntu-it.org/AmministrazioneSistema/Apt

ssh siteip -l root

apt-get update
apt-get upgrade
apt-cache search - string lists the packages that have a relationship with that string
apt-get install packagename - install the package

FOR GENROPY INSTALL

USE APT-GET
apt-get install libapache2-mod-wsgi
apt-get install postgresql
apt-get install build-essential
apt-get install subversion
apt-get install python-psycopg2
apt-get install python-setuptools
apt-get install python-dev 
apt-get install python-reportlab
apt-get install python-qt4  
apt-get install libxml2-dev libxslt-dev
apt-get install libcups2-dev wget cups cups-client

THE GREAT MAGIC WORD
apt-get install libapache2-mod-wsgi postgresql build-essential subversion python-psycopg2 python-setuptools python-dev python-reportlab python-qt4 libxml2-dev libxslt-dev libcups2-dev wget cups cups-client

WITH EASYINSTALL
easy_install -U -Z paver 
easy_install -U -Z babel pytz vobject
easy_install -U -Z paste webob weberror
easy_install -U -Z mako
easy_install -U -Z pypdf
easy_install -U -Z z3c.rml
easy_install -U -Z ipython

THE GREAT MAGIC WORD - easy_install
easy_install -U -Z paver babel pytz vobject paste webob weberror mako pypdf z3c.rml ipython


RECOMMENDED
adduser genro
visudo (copy the root and put the name Genro)

install webmin
http://www.kelvinwong.ca/2010/05/22/installing-webmin-on-ubuntu-server-10-04-lts-lucid/


- put a very safe password
- log in again via ssh as user Genro

[genro]
svn co http://svn.genropy.org/genro/trunk genro
cd genro/gnrpy
sudo paver develop

mkdir ~/projects
cd ~/projects
svn co http://...../project

sudo -u postgres psql
postgres=# \password

- new postgres password is usually 'postgres'

postgres=# \q

- I copy the home folder of genro .gnr 
- edit the paths to the relevant directories

[pycups]
wget http://cyberelk.net/tim/data/pycups/pycups-1.9.46.tar.bz2
tar xvfj pycups-1.9.46.tar.bz2
cd pycups-1.9.46
make
sudo make install

[screen]
apt-get install screen

 - http://kb.iu.edu/data/acuy.html
 - the screen command creates a fork of the current session supporting multiple terminals under the same login process.

To return to the normal Ctrl-A followed by d.
to reopen the screen with running processes: screen -r
use the command 'man' (it is your friend).

[Reading Logs]
less /var/log/apache2/error.log (view the beginning of the file. q to quit)
tail -n numberOfLines /var/log/apache2/error.log (Find the n lines  at the end of file.)
tail -n numberOfLines  -f /var/log/apache2/error.log (Displays the last n lines at the end of the file and maintains an open file so that the same updates are immediately displayed. Ctrl-C to exit)

[/etc/apache2/sites-available]


# *:80 indicates the  port to which the virtualhost responds 
# if you want the server with address 192.168.1.1 hypothetical, answer onlyc
# to the local net at port 8080 you should write <VirtualHost 192.168.1.1:8080>
<VirtualHost *:80> 

        
# Email address that is usually written in the error messages of Apache log
ServerAdmin webmaster@localhost
        

# Path that is used for static docs... not very relevant for us,
# The only possible use could be to customize pages for errors 404 o 500 creating static pages for it
DocumentRoot /var/www


        
# This directive defines a daemon  process WSGI:
# user and group are used as user and group that are used to run this process (the default is user = www-data group = www-data)
# python-eggs is the path to use do unzip eggs, it must be a path that the process user can write in.
#      usually /tmp is a good choice as it is always writable
# threads is the max number of threads for any WSGI process
# processes is the max number of process,omitting this parameter you get single process
WSGIDaemonProcess gnr user=genro group=genro python-eggs=/tmp threads=25

        
# set an apache environment variable. So now PROCESS_GROUP is 'gnr'
SetEnv PROCESS_GROUP gnr

        
# Specifies that this virtualhost must be served by the process specified below
WSGIProcessGroup %{ENV:PROCESS_GROUP}

# modify the following line to point your site
WSGIScriptAlias / /home/genro/progetti/mmusic/sites/provarci/root.py

# Associates a path to a file root.py apache (in the directory of the site), which is responsible
# The path must be equal to the apache home_url specified in siteconfig.xml
        <Directory /home/genro/progetti/music/sites/provarci>
            Options Indexes FollowSymLinks
            AllowOverride All
            Order allow,deny
            Allow from all
        </Directory>
# The entire directory section to specify the folder of the site must be valid
</VirtualHost>